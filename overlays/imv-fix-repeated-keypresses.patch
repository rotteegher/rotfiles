diff --git a/src/wl_window.c b/src/wl_window.c
index 0c2221a..1410ebe 100644
--- a/src/wl_window.c
+++ b/src/wl_window.c
@@ -45,6 +45,7 @@ struct imv_window {
   int pipe_fds[2];
 
   timer_t timer_id;
+  bool repeating; /* if the key is currently being repeated */
   int repeat_scancode; /* scancode of key to repeat */
   int repeat_delay; /* time before repeat in ms */
   int repeat_interval; /* time between repeats in ms */
@@ -183,6 +184,7 @@ static void keyboard_key(void *data, struct wl_keyboard *keyboard,
 
   if (!state) {
     /* If a key repeat timer is running, stop it */
+    window->repeating = false;
     struct itimerspec off = {
       .it_value = {
         .tv_sec = 0,
@@ -203,6 +205,7 @@ static void keyboard_key(void *data, struct wl_keyboard *keyboard,
 
   if (imv_keyboard_should_key_repeat(window->keyboard, key)) {
     /* Kick off the key-repeat timer for the current key */
+    window->repeating = true;
     window->repeat_scancode = key;
     struct itimerspec period = {
       .it_value = {
@@ -775,7 +778,10 @@ static void shutdown_wayland(struct imv_window *window)
 static void on_timer(union sigval sigval)
 {
   struct imv_window *window = sigval.sival_ptr;
-  push_keypress(window, window->repeat_scancode);
+  wl_display_roundtrip(window->wl_display);
+  if (window->repeating) {
+    push_keypress(window, window->repeat_scancode);
+  }
 }
 
 struct imv_window *imv_window_create(int width, int height, const char *title)
